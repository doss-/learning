Runs w/o any daemons, but still needs a server installed on the main machine
Manages nodes which are not required to have ansible installed
Uses SSH for access the nodes, so OpenSSH-Server need to be installed
Playbooks are the thing that define and install software

When running Ansible commands, they are run against nodes
 nodes are identified by Names
List of nodes is stored in 'inventory' option of config , which points to
 a file which describes Nodes - /etc/ansible/hosts , by default

things to install to get ansible environment up and running:
 sudo yum install python python-devel python-pip openssl ansible


specific package dependencies for Ansible:
python-httplib2
python-jinja2
python-markupsafe
python2-crypto
python2-paramiko

===Documentation
available at ansible.com
it has two documentations for
Ansible - opensource\free 
Ansible Tower - proprietary\paid
Documentations split into sections, check out
Module Indes section which will describe Ansible modules with examples
 and stuff

===Configuration
Config files:
/etc/ansible/ansible.cfg - has a configuration settings all of which are 
   commented out by default
 'sudo_user' option should be uncommented to be sure, but it is by default
   behaviour
 inventory - path to file where all the Nodes are stored

=====Hosts
located in
/etc/ansible/hosts
back it up

groups are started with [<group_name>]
and could has domain names or addresses or other aliases of the kind. i.e.:
[local]
localhost

=====User
create new user for ansible(lets call it ansible), add it to sudoers, because playbooks will fail
in case of password request promt
sudo visudo
 add
ansible ALL=(ALL)	NOPASSWD: ALL

!! This user account need to be created on EACH of the nodes
!! and also need to be added to sudoers file

=====SSH Keys
it is probably good practice to have key files generated and used for shh 
connection:
from under ansible user on Control Node generate keys:
  ssh-keygen
then copy public keys to other nodes:
  ssh-copy-id <other_node_address>
    ssh-copy-id 172.31.96.63 - will copy key to other machine, it somewhy did
     not work with domain name like doss12.mylabserver.com
!NOTE!:
  SSH Key also need to be copied to local machine, because Ansible will use SSH
   and SSH will try to connect to local machine via SSH and will ask for 
   password too

--version - returns version name and configuration info like config file 
  locations, paths, modules locations etc.
--list-hosts - list all hosts from Inventory

 all - executed from command line for all items in 
	Inventory (/etc/ansible/hosts)
  Or use name of the section from Inventory file instead of 'all'
 -m - Module to use
   ansible all -m ping - will ping-pong all items, green output is good
	red - bad, it could be if user is prompted for password enter
	in this case use ssh-keys authentification, as described in SSH Keys
	section above
   ansible centos -m copy -a "src=test.txt dest=/tmp/test.txt" - 
	Use module called 'copy'(copy files) with Attributes of
	src - source file (accepts relative path) test.txt located in current
	 directory
	dest - destination path on machines from a group 'centos'
 -a - Attributes. everything after it will be executed as a command
   ansible all -a "ls -la /home/ansible" - will return a section for each entry
	in Inventory, with executed ls -la command
	It returns 
	Name of the machine 
	Result - SUCCESS
	rc=0 - return code
	and command line output of executed command
 -s - SUDO, use elevated privileges, or something like that DEPRECATED
 -b --become - use to Become a SUDO
	this could also want a password for Root or user with root privileges:
	    "module_stderr": "Shared connection to localhost closed.\r\n",
	    "module_stdout": "sudo: a password is required\r\n",
	https://stackoverflow.com/questions/21870083/specify-sudo-password-for-ansible
	use this line:
   ansible local -b --extra-vars "ansible_become_pass=LAvmCenAns" -a "cat /var/log/messages"
	 --extra-vars proides extra parameters sent into execution 
		key value pairs, like name=value
		ansible_become_pass - special Ansible variable to store pass
===Modules
ping - checks nodes, like pings and pongs back
copy - copies files, requires attributes (-a)
	src=<relative\absolute path> - source path
	dest=<path> - destination path, where to copy a source 
	Example:
	ansible centos -m copy -a "src=./ansible/test.txt dest=/tmp/test.txt"
apt - installs packages (UBUNTU only), attributes:
	name=<package_name> - package to do something with
	state=<state> - state of package to be after command executed:
	  present - installs package if abscent, does nothing otherwise
	  latest - installs latests version of package, even if older exists
	  absent - makes sure package is absent
yum - installs packages for CentOS7
user - adds users, parameters:
	name=<username> - username for user to be created
	state=<state>
	  absent - remove the user
setup - gather facts checked by default and display it
	ansible all -m setup - will return facts about all groups in Inventory
	Parameters:
:	filter=<value> - filter output by some keywords, accepts wildcards
	Example:
	ansible all -m setup -a "filter=*ipv4*" - will return all the sections 
	 and their parents that contain keyword
:	--tree <dir_name> - saves all the facts in JSON format into a directory
	 creating file for each host, named by that host name in Inventory
	Example:
	ansible centos -m setup --tree facts - will create dir facts with file
	for each machine from centos group, that file will contain all the
	facts gathered for that particular machine. And will be named after the
	hostname from Inventory for that machine
	Tree could be used the check all the available facts, forfurther filtering

===Playbooks
ansible-playbook:
 to execute playbooks
 ansible-playbook <playbook.yaml>
