how to properly import all packages from other places than current directory:
https://stackoverflow.com/a/34066989
how to change PYTHONPATH:
http://ask.xmodulo.com/change-syspath-pythonpath-python.html


types:
  Bool:
   True
   False
  nothing:
   None - usefull when need to declare empty(not initialized) variable
	Example:
    variable = None
    while (not variable):
      variable = True

not:
  like ! in c#\ruby
   if (not varTrue) == if(!varTrue)

print:
  2.7
   print "this is string and this is ",variable
   print 'Hello World! I have been seen {} times.\n'.format(count)
  3+
   print("this is string and this is",variable)
   print("test value: {}".format(value))

if:
  if 1>2:
    print "this will never print"

whiel:
  wile True:
    print "this will print forever"


read\write files 
open('file_path') - opens for 'r' - read, 'r' is default second param
 others:
 'w' : use for writing
 'x' : use for creating and writing to a new file
 'a' : use for appending to a file
 'r+' : use for reading and writing to the same file

stream = open('file/path', 'r')
stream.read() - entire contents as String
stream.readline() - one line and moves cursor forward
stream.readlines() - all lines left after cursor, returns List[string]
stream.close() - need to close unmanaged resources, can only read from 'r'
stream.write() - writes only string w/o carriage return


exception handling:
  try:
    {try code}
  except <lib.namespace.ExceptionClass> as <var_name>:
    {catch code}

pip:
  python libraries manager

 install:
   installs libraries
   -r <file_name>- requirement, takes required packages from a file
	each package name on new line
	 Example:
	Flask   	- will install Flask
	Flask==0.10.1   - will install Flask of given version

mysql+python:
  mysql-connector-python - contains mysql libs for work with database
   how to work with DB:
  https://dev.mysql.com/doc/connector-python/en/connector-python-example-connecting.html
  
  nice example of PYthon+Mysql in DockerCompose 
   https://stackoverflow.com/questions/42106613/docker-compose-mysql-connection-failing

Web Frameworks:
  Flask - small and easy, almost nothing included, does the job, has many custom 
	libraries to close the gap. Good for little projects
  Django - has everything, good for large projects

  Flask vs Djanko vs Pyramid:
    https://www.airpair.com/python/posts/django-flask-pyramid#6-1-demo-app-with-flask
     Flask short tutorial:
    https://www.tutorialspoint.com/flask/flask_wtf.htm
     Flask greater tutorial, also has something with DB connection:
    https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-iv-database
